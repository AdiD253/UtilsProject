apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'kotlin-allopen'

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        applicationId "pl.adriandefus.utilsproject"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "pl.adriandefus.utilsproject.runner.CustomTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

allOpen {
    annotation 'pl.adriandefus.utilsproject.util.OpenForTesting'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    ktlint "com.github.shyiko:ktlint:0.30.0"

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //resourceprovider
    implementation 'com.xfinity:resourceprovider-library:1.0'
    kapt "com.xfinity:resourceprovider-compiler:1.0"

    //anim
    implementation 'com.airbnb.android:lottie:2.7.0'

    //lifecycle
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.dagger_version"

    //ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxKotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroid_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_adapter_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_adapter_version"
    implementation "com.google.code.gson:gson:$rootProject.gson_version"

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttp_version"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.18.3"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
}

kapt {
    correctErrorTypes = true
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint
